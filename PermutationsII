class Solution {
    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> permutationList = new Arraylist<>();
        getPermutations(permutationList, new ArrayList<Integer>(),nums, 0);
        return permutationList;
    }
    
    public void getPermutations(List<List<Integer>> permutationList, List<Integer> permutation,int [] nums, int idx) {
        if (idx == nums.length) {
            List<Integer> perm = new ArrayList<>();
            for (int i = 0; i < permutation.size(); ++i) {
                perm.add(permutation.get(i));
            }
            permutationList.add(perm);
            return;
        }
        
        for (int i = idx; i < nums.length; ++i) {
            permutation.
            getPermutations(permutationList, permutation)
        }
    }
    
    public void swap (int [] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
