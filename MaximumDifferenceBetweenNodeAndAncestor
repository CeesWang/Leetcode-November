/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxAncestorDiff(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int [] max = new int [1];
        getMaxDiff(root, root.val, root.val, max);
        return max[0];
    }
    
    public void getMaxDiff(TreeNode node, int min, int max, int [] ans) {
        if (node != null) {
            min = Math.min (min, node.val);
            max = Math.max (max, node.val);
            getMaxDiff (node.left, min, max, ans);
            getMaxDiff (node.right, min, max, ans);
            ans[0] = Math.max(ans[0],max - min);
        }
    }
}
