/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rob(TreeNode root) {
        if (root == null) return 0;
        int [] arr = dfs(root);
        return Math.max(arr[0], arr[1]);   
    }
    
    public int [] dfs (TreeNode node) {
        if (node == null) return new int [] {0,0};
        int [] left = dfs(node.left);
        int [] right = dfs(node.right);
        int rob = node.val + left[1] + right[1];
        int pass = Math.max(left[0], left[1]) + Math.max(right[0], right[1]);
        return new int [] {rob, pass};
    }
    
}
